{"ast":null,"code":"var _jsxFileName = \"/Users/iNks/Documents/DEV/rgbtohex/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nfunction rgbToHex(r, g, b) {\n  return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\nfunction HEX2RGB(hex) {\n  \"use strict\";\n\n  if (hex.charAt(0) === '#') {\n    hex = hex.substr(1);\n  }\n\n  if (hex.length < 2 || hex.length > 6) {\n    return false;\n  }\n\n  var values = hex.split(''),\n      r,\n      g,\n      b;\n\n  if (hex.length === 2) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = r;\n    b = r;\n  } else if (hex.length === 3) {\n    r = parseInt(values[0].toString() + values[0].toString(), 16);\n    g = parseInt(values[1].toString() + values[1].toString(), 16);\n    b = parseInt(values[2].toString() + values[2].toString(), 16);\n  } else if (hex.length === 6) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = parseInt(values[2].toString() + values[3].toString(), 16);\n    b = parseInt(values[4].toString() + values[5].toString(), 16);\n  } else {\n    return false;\n  }\n\n  return [r, g, b];\n}\n\nexport default function Index() {\n  const {\n    0: rValue,\n    1: setRValue\n  } = useState();\n  const {\n    0: gValue,\n    1: setGValue\n  } = useState();\n  const {\n    0: bValue,\n    1: setBValue\n  } = useState();\n  const {\n    0: theHex,\n    1: setTheHex\n  } = useState();\n  const {\n    0: theRGB,\n    1: setTheRGB\n  } = useState();\n  const {\n    0: theColor,\n    1: setTheColor\n  } = useState();\n\n  const setRGB = str => {\n    const result = HEX2RGB(str);\n    setRValue(result[0]);\n    setGValue(result[1]);\n    setBValue(result[2]);\n    setTheHex(str);\n    setTheColor({\n      background: \"#\" + str\n    });\n  };\n\n  const setHEX = (r, g, b) => {\n    const result = rgbToHex(r, g, b);\n    setRValue(r);\n    setGValue(g);\n    setBValue(b);\n    setTheHex(result);\n    setTheColor({\n      background: \"#\" + result\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: theColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Hello Next.js\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Red\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Red value\",\n    value: rValue,\n    maxLength: \"3\",\n    onChange: e => {\n      setHEX(e.target.value, gValue, bValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Green\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Green value\",\n    value: gValue,\n    maxLength: \"3\",\n    onChange: e => {\n      setHEX(rValue, e.target.value, bValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Blue\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Blue value\",\n    value: bValue,\n    maxLength: \"3\",\n    onChange: e => {\n      setHEX(rValue, gValue, e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Hex Value\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter value\",\n    maxLength: \"6\",\n    value: theHex,\n    onChange: e => {\n      setRGB(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/iNks/Documents/DEV/rgbtohex/pages/index.js"],"names":["useState","RGB_HEX","rgbToHex","r","g","b","toString","slice","HEX2RGB","hex","charAt","substr","length","values","split","parseInt","Index","rValue","setRValue","gValue","setGValue","bValue","setBValue","theHex","setTheHex","theRGB","setTheRGB","theColor","setTheColor","setRGB","str","result","background","setHEX","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\n\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nfunction rgbToHex(r, g, b) {\n    return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\n\nfunction HEX2RGB (hex) {\n    \"use strict\";\n    if (hex.charAt(0) === '#') {\n        hex = hex.substr(1);\n    }\n    if ((hex.length < 2) || (hex.length > 6)) {\n        return false;\n    }\n    var values = hex.split(''),\n        r,\n        g,\n        b;\n\n    if (hex.length === 2) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = r;\n        b = r;\n    } else if (hex.length === 3) {\n        r = parseInt(values[0].toString() + values[0].toString(), 16);\n        g = parseInt(values[1].toString() + values[1].toString(), 16);\n        b = parseInt(values[2].toString() + values[2].toString(), 16);\n    } else if (hex.length === 6) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = parseInt(values[2].toString() + values[3].toString(), 16);\n        b = parseInt(values[4].toString() + values[5].toString(), 16);\n    } else {\n        return false;\n    }\n    return [r, g, b];\n}\n\n\n\n\n\nexport default function Index() {\n    const [rValue, setRValue] = useState()\n    const [gValue, setGValue] = useState()\n    const [bValue, setBValue] = useState()\n    const [theHex, setTheHex] = useState()\n    const [theRGB, setTheRGB] = useState()\n    const [theColor, setTheColor] = useState()\n\n    const setRGB = (str) => {\n        const result = HEX2RGB(str)\n\n        setRValue(result[0])\n        setGValue(result[1])\n        setBValue(result[2])\n\n        setTheHex(str)\n        setTheColor({background: \"#\" + str})\n\n    }\n\n    const setHEX = (r,g,b) => {\n        const result = rgbToHex(r,g,b)\n        setRValue(r)\n        setGValue(g)\n        setBValue(b)\n        \n\n        \n        setTheHex(result)\n        setTheColor({background: \"#\" + result})\n\n    }\n\n    return (\n      <div style={theColor}>\n        <p>Hello Next.js</p>\n\n        <p>Red</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter Red value\"\n        value = {rValue}\n        maxLength = \"3\"\n        onChange = {(e) => {\n            setHEX(e.target.value, gValue, bValue)\n        }\n        }\n        />\n\n        <p>Green</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter Green value\"\n        value = {gValue}\n        maxLength = \"3\"\n        onChange = {(e) => {\n            setHEX(rValue, e.target.value, bValue)\n        }\n        }\n        />\n\n        <p>Blue</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter Blue value\"\n        value = {bValue}\n        maxLength = \"3\"\n        onChange = {(e) => {\n            setHEX(rValue, gValue, e.target.value)\n        }\n        }\n        />\n\n\n        <br/>\n        <br/>\n    \n        <p>Hex Value</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter value\"\n        maxLength = \"6\"\n        value = {theHex}\n        onChange = {(e) => {\n            setRGB(e.target.value)\n        }\n        }\n        />\n        \n    \n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}