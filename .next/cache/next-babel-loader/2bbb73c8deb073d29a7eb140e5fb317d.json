{"ast":null,"code":"var _jsxFileName = \"/Users/iNks/Documents/DEV/rgbtohex/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nconst linkStyle = {\n  background: \"#F3F3F3\",\n  height: \"100px\",\n  width: \"100px\"\n};\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nconst hex2RGB = str => {\n  const [, short, long] = String(str).match(RGB_HEX) || [];\n\n  if (long) {\n    const value = Number.parseInt(long, 16);\n    return [value >> 16, value >> 8 & 0xFF, value & 0xFF];\n  } else if (short) {\n    return Array.from(short, s => Number.parseInt(s, 16)).map(n => n << 4 | n);\n  }\n};\n\nconst setRBG = str => {\n  hex2RGB;\n};\n\nexport default function Index() {\n  const {\n    0: rValue,\n    1: setRValue\n  } = useState(200);\n  const {\n    0: gValue,\n    1: setGValue\n  } = useState(200);\n  const {\n    0: bValue,\n    1: setBValue\n  } = useState(200);\n  return __jsx(\"div\", {\n    style: linkStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Hello Next.js\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Red\"), rValue, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Green\"), gValue, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Blue\"), bValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter R value\",\n    onChange: e => hex2RGB(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/iNks/Documents/DEV/rgbtohex/pages/index.js"],"names":["useState","linkStyle","background","height","width","RGB_HEX","hex2RGB","str","short","long","String","match","value","Number","parseInt","Array","from","s","map","n","setRBG","Index","rValue","setRValue","gValue","setGValue","bValue","setBValue","e","target"],"mappings":";;;AAGA,SAASA,QAAT,QAAyB,OAAzB;AAIA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,SADE;AAEdC,EAAAA,MAAM,EAAE,OAFM;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAlB;AAOA,MAAMC,OAAO,GAAG,2DAAhB;;AAEA,MAAMC,OAAO,GAAGC,GAAG,IAAI;AACrB,QAAM,GAAIC,KAAJ,EAAWC,IAAX,IAAoBC,MAAM,CAACH,GAAD,CAAN,CAAYI,KAAZ,CAAkBN,OAAlB,KAA8B,EAAxD;;AAEA,MAAII,IAAJ,EAAU;AACR,UAAMG,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBL,IAAhB,EAAsB,EAAtB,CAAd;AACA,WAAO,CAAEG,KAAK,IAAI,EAAX,EAAeA,KAAK,IAAI,CAAT,GAAa,IAA5B,EAAkCA,KAAK,GAAG,IAA1C,CAAP;AACD,GAHD,MAGO,IAAIJ,KAAJ,EAAW;AAChB,WAAOO,KAAK,CAACC,IAAN,CAAWR,KAAX,EAAkBS,CAAC,IAAIJ,MAAM,CAACC,QAAP,CAAgBG,CAAhB,EAAmB,EAAnB,CAAvB,EAA+CC,GAA/C,CAAmDC,CAAC,IAAKA,CAAC,IAAI,CAAN,GAAWA,CAAnE,CAAP;AACD;AACF,CATD;;AAWA,MAAMC,MAAM,GAAIb,GAAD,IAAS;AACpBD,EAAAA,OAAO;AACV,CAFD;;AAMA,eAAe,SAASe,KAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBvB,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM;AAAA,OAACwB,MAAD;AAAA,OAASC;AAAT,MAAsBzB,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM;AAAA,OAAC0B,MAAD;AAAA,OAASC;AAAT,MAAsB3B,QAAQ,CAAC,GAAD,CAApC;AACA,SACE;AAAK,IAAA,KAAK,EAAEC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAIGqB,MAJH,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAOGE,MAPH,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAUGE,MAVH,EAYE;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,WAAW,EAAG,eAFd;AAGA,IAAA,QAAQ,EAAKE,CAAD,IAAOtB,OAAO,CAACsB,CAAC,CAACC,MAAF,CAASjB,KAAV,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAsBD","sourcesContent":["\n\n\nimport { useState } from 'react'\n\n\n\nconst linkStyle = {\n    background: \"#F3F3F3\", \n    height: \"100px\",\n    width: \"100px\"\n  };\n\n\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nconst hex2RGB = str => {\n  const [ , short, long ] = String(str).match(RGB_HEX) || [];\n\n  if (long) {\n    const value = Number.parseInt(long, 16);\n    return [ value >> 16, value >> 8 & 0xFF, value & 0xFF ];\n  } else if (short) {\n    return Array.from(short, s => Number.parseInt(s, 16)).map(n => (n << 4) | n);\n  }\n};\n\nconst setRBG = (str) => {\n    hex2RGB\n}\n\n\n\nexport default function Index() {\n    const [rValue, setRValue] = useState(200)\n    const [gValue, setGValue] = useState(200)\n    const [bValue, setBValue] = useState(200)\n    return (\n      <div style={linkStyle}>\n        <p>Hello Next.js</p>\n\n        <p>Red</p>\n        {rValue}\n\n        <p>Green</p>\n        {gValue}\n\n        <p>Blue</p>\n        {bValue}\n\n        <input \n        type=\"text\"\n        placeholder = \"Enter R value\"\n        onChange = {(e) => hex2RGB(e.target.value)}\n        />\n        \n    \n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}