{"ast":null,"code":"var _jsxFileName = \"/Users/iNks/Documents/DEV/rgbtohex/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nfunction HEX2RGB(hex) {\n  \"use strict\";\n\n  if (hex.charAt(0) === '#') {\n    hex = hex.substr(1);\n  }\n\n  if (hex.length < 2 || hex.length > 6) {\n    return false;\n  }\n\n  var values = hex.split(''),\n      r,\n      g,\n      b;\n\n  if (hex.length === 2) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = r;\n    b = r;\n  } else if (hex.length === 3) {\n    r = parseInt(values[0].toString() + values[0].toString(), 16);\n    g = parseInt(values[1].toString() + values[1].toString(), 16);\n    b = parseInt(values[2].toString() + values[2].toString(), 16);\n  } else if (hex.length === 6) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = parseInt(values[2].toString() + values[3].toString(), 16);\n    b = parseInt(values[4].toString() + values[5].toString(), 16);\n  } else {\n    return false;\n  }\n\n  return [r, g, b];\n}\n\nexport default function Index() {\n  const {\n    0: rValue,\n    1: setRValue\n  } = useState();\n  const {\n    0: gValue,\n    1: setGValue\n  } = useState();\n  const {\n    0: bValue,\n    1: setBValue\n  } = useState();\n  const {\n    0: theHex,\n    1: setTheHex\n  } = useState({\n    background: \"F8F8F8\"\n  });\n\n  const setRBG = str => {\n    const result = HEX2RGB(str);\n    setRValue(result[0]);\n    setGValue(result[1]);\n    setBValue(result[2]);\n  };\n\n  const setHEX = str => {\n    setTheHex({\n      background: \"#\" + str\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: theHex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Hello Next.js\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Red\"), rValue, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Green\"), gValue, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Blue\"), bValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter R value\",\n    onChange: e => {\n      if (e.target.value) {\n        setRBG(e.target.value);\n        setHEX(e.target.value);\n      } else {\n        setHEX(\"FFFFFF\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/iNks/Documents/DEV/rgbtohex/pages/index.js"],"names":["useState","RGB_HEX","HEX2RGB","hex","charAt","substr","length","values","split","r","g","b","parseInt","toString","Index","rValue","setRValue","gValue","setGValue","bValue","setBValue","theHex","setTheHex","background","setRBG","str","result","setHEX","e","target","value"],"mappings":"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","sourcesContent":["\n\n\nimport { useState } from 'react'\n\n\n\n\n\n\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\n\nfunction HEX2RGB (hex) {\n    \"use strict\";\n    if (hex.charAt(0) === '#') {\n        hex = hex.substr(1);\n    }\n    if ((hex.length < 2) || (hex.length > 6)) {\n        return false;\n    }\n    var values = hex.split(''),\n        r,\n        g,\n        b;\n\n    if (hex.length === 2) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = r;\n        b = r;\n    } else if (hex.length === 3) {\n        r = parseInt(values[0].toString() + values[0].toString(), 16);\n        g = parseInt(values[1].toString() + values[1].toString(), 16);\n        b = parseInt(values[2].toString() + values[2].toString(), 16);\n    } else if (hex.length === 6) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = parseInt(values[2].toString() + values[3].toString(), 16);\n        b = parseInt(values[4].toString() + values[5].toString(), 16);\n    } else {\n        return false;\n    }\n    return [r, g, b];\n}\n\n\n\n\n\nexport default function Index() {\n\n\n\n    const [rValue, setRValue] = useState()\n    const [gValue, setGValue] = useState()\n    const [bValue, setBValue] = useState()\n    const [theHex, setTheHex] = useState({background: \"F8F8F8\"})\n\n    const setRBG = (str) => {\n        const result = HEX2RGB(str)\n        setRValue(result[0]);\n        setGValue(result[1]);\n        setBValue(result[2]);\n    }\n\n    const setHEX = (str) => {\n\n        setTheHex({background: \"#\" + str})\n\n    }\n\n    return (\n      <div style={theHex}>\n        <p>Hello Next.js</p>\n\n        <p>Red</p>\n        {rValue}\n\n        <p>Green</p>\n        {gValue}\n\n        <p>Blue</p>\n        {bValue}\n\n        <input \n        type=\"text\"\n        placeholder = \"Enter R value\"\n        onChange = {(e) => {\n            if (e.target.value) {\n                setRBG(e.target.value)\n                setHEX(e.target.value)\n            } else {\n                setHEX(\"FFFFFF\")\n            }\n        }\n        }\n        />\n        \n    \n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}