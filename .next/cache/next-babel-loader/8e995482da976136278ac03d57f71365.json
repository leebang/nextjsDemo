{"ast":null,"code":"var _jsxFileName = \"/Users/iNks/Documents/DEV/rgbtohex/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nvar helper = function (rgb) {\n  var hex = Number(rgb).toString(16);\n\n  if (hex.length < 2) {\n    hex = \"0\" + hex;\n  }\n\n  return hex;\n};\n\nvar rgbToHex = function (r, g, b) {\n  var red = helper(r);\n  var green = helper(g);\n  var blue = helper(b);\n  return red + green + blue;\n};\n\nfunction HEX2RGB(hex) {\n  \"use strict\";\n\n  if (hex.charAt(0) === '#') {\n    hex = hex.substr(1);\n  }\n\n  if (hex.length < 2 || hex.length > 6) {\n    return false;\n  }\n\n  var values = hex.split(''),\n      r,\n      g,\n      b;\n\n  if (hex.length === 2) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = r;\n    b = r;\n  } else if (hex.length === 3) {\n    r = parseInt(values[0].toString() + values[0].toString(), 16);\n    g = parseInt(values[1].toString() + values[1].toString(), 16);\n    b = parseInt(values[2].toString() + values[2].toString(), 16);\n  } else if (hex.length === 6) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = parseInt(values[2].toString() + values[3].toString(), 16);\n    b = parseInt(values[4].toString() + values[5].toString(), 16);\n  } else {\n    return false;\n  }\n\n  return [r, g, b];\n}\n\nexport default function Index() {\n  const router = useRouter();\n  const {\n    0: rValue,\n    1: setRValue\n  } = useState(0);\n  const {\n    0: gValue,\n    1: setGValue\n  } = useState(0);\n  const {\n    0: bValue,\n    1: setBValue\n  } = useState(0);\n  const {\n    0: theHex,\n    1: setTheHex\n  } = useState(() => {\n    router.query.hex ? router.query.hex : \"FFFFFF\";\n  });\n  const {\n    0: theRGB,\n    1: setTheRGB\n  } = useState();\n  const {\n    0: theColor,\n    1: setTheColor\n  } = useState();\n\n  const setDefault = () => {\n    setRValue(\"\");\n    setGValue(\"\");\n    setBValue(\"\");\n    setTheHex(\"\");\n    setTheColor({\n      background: \"#FFFFFF\"\n    });\n  };\n\n  const setRGB = str => {\n    const result = HEX2RGB(str);\n    setRValue(result[0]);\n    setGValue(result[1]);\n    setBValue(result[2]);\n    setTheHex(str);\n    setTheColor({\n      background: \"#\" + str\n    });\n  };\n\n  const setHEX = (r, g, b) => {\n    const result = rgbToHex(r, g, b);\n    setRValue(r);\n    setGValue(g);\n    setBValue(b);\n    setTheHex(result);\n    setTheColor({\n      background: \"#\" + result\n    });\n  };\n\n  useEffect(() => {});\n  return __jsx(\"div\", {\n    style: theColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, router.query.hex, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Hello Next.js\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Red \"), \" \", rValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Red value\",\n    value: rValue,\n    maxLength: \"3\",\n    onChange: e => {\n      if (e.target.value) {\n        setHEX(e.target.value, gValue, bValue);\n      } else {\n        setDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Green \"), \" \", gValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Green value\",\n    value: gValue,\n    maxLength: \"3\",\n    onChange: e => {\n      if (e.target.value) {\n        setHEX(rValue, e.target.value, bValue);\n      } else {\n        setDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Blue \"), \" \", bValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Blue value\",\n    value: bValue,\n    maxLength: \"3\",\n    onChange: e => {\n      if (e.target.value) {\n        setHEX(rValue, gValue, e.target.value);\n      } else {\n        setDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Hex Value \"), theHex, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter value\",\n    maxLength: \"6\",\n    value: router.query.hex ? router.query.hex : theHex,\n    onChange: e => {\n      if (e.target.value) {\n        setRGB(e.target.value);\n      } else {\n        setDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/iNks/Documents/DEV/rgbtohex/pages/index.js"],"names":["useState","useEffect","useRouter","helper","rgb","hex","Number","toString","length","rgbToHex","r","g","b","red","green","blue","HEX2RGB","charAt","substr","values","split","parseInt","Index","router","rValue","setRValue","gValue","setGValue","bValue","setBValue","theHex","setTheHex","query","theRGB","setTheRGB","theColor","setTheColor","setDefault","background","setRGB","str","result","setHEX","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\n\n\nvar helper = function (rgb) { \n    var hex = Number(rgb).toString(16);\n    if (hex.length < 2) {\n         hex = \"0\" + hex;\n    }\n    return hex;\n  };\n\nvar rgbToHex = function(r,g,b) {   \n    var red = helper(r);\n    var green = helper(g);\n    var blue = helper(b);\n    return red+green+blue;\n};\n\n\nfunction HEX2RGB (hex) {\n    \"use strict\";\n    if (hex.charAt(0) === '#') {\n        hex = hex.substr(1);\n    }\n    if ((hex.length < 2) || (hex.length > 6)) {\n        return false;\n    }\n    var values = hex.split(''),\n        r,\n        g,\n        b;\n\n    if (hex.length === 2) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = r;\n        b = r;\n    } else if (hex.length === 3) {\n        r = parseInt(values[0].toString() + values[0].toString(), 16);\n        g = parseInt(values[1].toString() + values[1].toString(), 16);\n        b = parseInt(values[2].toString() + values[2].toString(), 16);\n    } else if (hex.length === 6) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = parseInt(values[2].toString() + values[3].toString(), 16);\n        b = parseInt(values[4].toString() + values[5].toString(), 16);\n    } else {\n        return false;\n    }\n    return [r, g, b];\n}\n\n\nexport default function Index() {\n    const router = useRouter()\n    const [rValue, setRValue] = useState(0)\n    const [gValue, setGValue] = useState(0)\n    const [bValue, setBValue] = useState(0)\n    const [theHex, setTheHex] = useState(() => {\n        router.query.hex ?\n        router.query.hex : \n        \"FFFFFF\"\n\n    })\n    const [theRGB, setTheRGB] = useState()\n    const [theColor, setTheColor] = useState()\n\n    const setDefault = () => {\n        setRValue(\"\")\n        setGValue(\"\")\n        setBValue(\"\")\n        setTheHex(\"\")\n\n        setTheColor({background: \"#FFFFFF\"})\n        \n    }\n\n    const setRGB = (str) => {\n        const result = HEX2RGB(str)\n        setRValue(result[0])\n        setGValue(result[1])\n        setBValue(result[2])\n\n        setTheHex(str)\n        setTheColor({background: \"#\" + str})\n\n    }\n\n    const setHEX = (r,g,b) => {\n        const result = rgbToHex(r,g,b)\n\n        setRValue(r)\n        setGValue(g)\n        setBValue(b)\n\n        setTheHex(result)\n        setTheColor({background: \"#\" + result})\n\n    }\n\n    useEffect(() => {\n        \n    })\n\n    return (\n      <div style={theColor}>\n        {router.query.hex}\n        <p>Hello Next.js</p>\n\n        <p>Red </p> {rValue}\n        <input \n        type=\"text\"\n        placeholder = \"Enter Red value\"\n        value = {rValue}\n        maxLength = \"3\"\n        onChange = {(e) => {\n            if (e.target.value) {\n                setHEX(e.target.value, gValue, bValue)\n            } else {\n\n                setDefault()\n            }\n        }\n        }\n        />\n\n        <p>Green </p> {gValue}\n        <input \n        type=\"text\"\n        placeholder = \"Enter Green value\"\n        value = {gValue}\n        maxLength = \"3\"\n        onChange = {(e) => {\n            if (e.target.value) {\n                setHEX(rValue, e.target.value, bValue)\n            } else {\n                setDefault()\n            }\n        }\n        }\n        />\n\n        <p>Blue </p> {bValue}\n        <input \n        type=\"text\"\n        placeholder = \"Enter Blue value\"\n        value = {bValue}\n        maxLength = \"3\"\n        onChange = {(e) => {\n            if (e.target.value) {\n                setHEX(rValue, gValue, e.target.value)\n            } else {\n                setDefault()\n            }\n        }\n        }\n        />\n\n\n        <br/>\n        <br/>\n    \n        <p>Hex Value </p>{theHex}\n        <input \n        type=\"text\"\n        placeholder = \"Enter value\"\n        maxLength = \"6\"\n        value = {router.query.hex ? router.query.hex : theHex}\n        \n        onChange = {(e) => {\n            if (e.target.value) {\n                setRGB(e.target.value)\n            } else {\n                setDefault()\n            }\n            \n        }\n        }\n        />\n        \n\n\n    \n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}