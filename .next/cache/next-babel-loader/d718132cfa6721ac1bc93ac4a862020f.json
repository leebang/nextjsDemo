{"ast":null,"code":"var _jsxFileName = \"/Users/iNks/Documents/DEV/rgbtohex/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nvar RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nfunction HEX2RGB(hex) {\n  \"use strict\";\n\n  if (hex.charAt(0) === '#') {\n    hex = hex.substr(1);\n  }\n\n  if (hex.length < 2 || hex.length > 6) {\n    return false;\n  }\n\n  var values = hex.split(''),\n      r,\n      g,\n      b;\n\n  if (hex.length === 2) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = r;\n    b = r;\n  } else if (hex.length === 3) {\n    r = parseInt(values[0].toString() + values[0].toString(), 16);\n    g = parseInt(values[1].toString() + values[1].toString(), 16);\n    b = parseInt(values[2].toString() + values[2].toString(), 16);\n  } else if (hex.length === 6) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = parseInt(values[2].toString() + values[3].toString(), 16);\n    b = parseInt(values[4].toString() + values[5].toString(), 16);\n  } else {\n    return false;\n  }\n\n  return [r, g, b];\n}\n\nexport default function Index() {\n  var _useState = useState(),\n      rValue = _useState[0],\n      setRValue = _useState[1];\n\n  var _useState2 = useState(),\n      gValue = _useState2[0],\n      setGValue = _useState2[1];\n\n  var _useState3 = useState(),\n      bValue = _useState3[0],\n      setBValue = _useState3[1];\n\n  var _useState4 = useState({\n    background: \"F8F8F8\"\n  }),\n      theHex = _useState4[0],\n      setTheHex = _useState4[1];\n\n  var setRBG = function setRBG(str) {\n    var result = HEX2RGB(str);\n    setRValue(result[0]);\n    setGValue(result[1]);\n    setBValue(result[2]);\n\n    if (str) {\n      setTheHex({\n        background: \"#\" + str\n      });\n    } else {\n      setTheHex({\n        background: \"F8F8F8\"\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: theHex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Hello Next.js\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Red\"), rValue, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Green\"), gValue, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Blue\"), bValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter R value\",\n    onChange: function onChange(e) {\n      return setRBG(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/iNks/Documents/DEV/rgbtohex/pages/index.js"],"names":["useState","RGB_HEX","HEX2RGB","hex","charAt","substr","length","values","split","r","g","b","parseInt","toString","Index","rValue","setRValue","gValue","setGValue","bValue","setBValue","background","theHex","setTheHex","setRBG","str","result","e","target","value"],"mappings":"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","sourcesContent":["\n\n\nimport { useState } from 'react'\n\n\n\n\n\n\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\n\nfunction HEX2RGB (hex) {\n    \"use strict\";\n    if (hex.charAt(0) === '#') {\n        hex = hex.substr(1);\n    }\n    if ((hex.length < 2) || (hex.length > 6)) {\n        return false;\n    }\n    var values = hex.split(''),\n        r,\n        g,\n        b;\n\n    if (hex.length === 2) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = r;\n        b = r;\n    } else if (hex.length === 3) {\n        r = parseInt(values[0].toString() + values[0].toString(), 16);\n        g = parseInt(values[1].toString() + values[1].toString(), 16);\n        b = parseInt(values[2].toString() + values[2].toString(), 16);\n    } else if (hex.length === 6) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = parseInt(values[2].toString() + values[3].toString(), 16);\n        b = parseInt(values[4].toString() + values[5].toString(), 16);\n    } else {\n        return false;\n    }\n    return [r, g, b];\n}\n\n\n\n\n\nexport default function Index() {\n\n\n\n    const [rValue, setRValue] = useState()\n    const [gValue, setGValue] = useState()\n    const [bValue, setBValue] = useState()\n    const [theHex, setTheHex] = useState({background: \"F8F8F8\"})\n\n    const setRBG = (str) => {\n        const result = HEX2RGB(str)\n        setRValue(result[0]);\n        setGValue(result[1]);\n        setBValue(result[2]);\n\n        if (str) {\n            setTheHex({background: \"#\" + str})\n        } else {\n            setTheHex({background: \"F8F8F8\"})\n        }\n        \n    }\n\n    return (\n      <div style={theHex}>\n        <p>Hello Next.js</p>\n\n        <p>Red</p>\n        {rValue}\n\n        <p>Green</p>\n        {gValue}\n\n        <p>Blue</p>\n        {bValue}\n\n        <input \n        type=\"text\"\n        placeholder = \"Enter R value\"\n        onChange = {(e) => setRBG(e.target.value)}\n        />\n        \n    \n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}