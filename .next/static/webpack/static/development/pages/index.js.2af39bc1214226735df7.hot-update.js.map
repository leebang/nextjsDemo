{"version":3,"file":"static/webpack/static/development/pages/index.js.2af39bc1214226735df7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["\n\n\nimport { useState } from 'react'\n\n\n\n\n\n\nconst hex = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\n\nfunction HEX2RGB(hex) {\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n      return r + r + g + g + b + b;\n    });\n  \n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result.r, 16),\n      g: parseInt(result.g, 16),\n      b: parseInt(result.b, 16)\n    } : null;\n  }\n\n\n\n\nexport default function Index() {\n    const linkStyle = {\n        background: \"#F3F3F3\", \n        height: \"100px\",\n        width: \"100px\"\n      };\n\n    const [rValue, setRValue] = useState()\n    const [gValue, setGValue] = useState()\n    const [bValue, setBValue] = useState()\n\n    const setRBG = (str) => {\n        const result = HEX2RGB(str)\n        setRValue(result[0]);\n        setGValue(result[1]);\n        setBValue(result[2]);\n\n        \n    }\n\n    return (\n      <div style={linkStyle}>\n        <p>Hello Next.js</p>\n\n        <p>Red</p>\n        {rValue}\n\n        <p>Green</p>\n        {gValue}\n\n        <p>Blue</p>\n        {bValue}\n\n        <input \n        type=\"text\"\n        placeholder = \"Enter R value\"\n        onChange = {(e) => setRBG(e.target.value)}\n        />\n        \n    \n      </div>\n    );\n  }"],"mappings":";;;;;;;;;;;;;;;;;AAGA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAIA;AACA;AACA;AACA;AACA;AAHA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;A","sourceRoot":""}