{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/iNks/Documents/DEV/rgbtohex/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nvar RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nvar HEX2RGB = function HEX2RGB(str) {\n  var _ref = String(str).match(RGB_HEX) || [],\n      _ref2 = _slicedToArray(_ref, 3),\n      _short = _ref2[1],\n      _long = _ref2[2];\n\n  if (_long) {\n    var value = Number.parseInt(_long, 16);\n    return [value >> 16, value >> 8 & 0xFF, value & 0xFF];\n  } else if (_short) {\n    return Array.from(_short, function (s) {\n      return Number.parseInt(s, 16);\n    }).map(function (n) {\n      return n << 4 | n;\n    });\n  }\n};\n\nexport default function Index() {\n  var linkStyle = {\n    background: \"#F3F3F3\",\n    height: \"100px\",\n    width: \"100px\"\n  };\n\n  var _useState = useState(),\n      rValue = _useState[0],\n      setRValue = _useState[1];\n\n  var _useState2 = useState(),\n      gValue = _useState2[0],\n      setGValue = _useState2[1];\n\n  var _useState3 = useState(),\n      bValue = _useState3[0],\n      setBValue = _useState3[1];\n\n  var setRBG = function setRBG(str) {\n    var result = HEX2RGB(str);\n    setRValue(result[0]);\n    setGValue(result[1]);\n    setBValue(result[2]);\n  };\n\n  return __jsx(\"div\", {\n    style: linkStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Hello Next.js\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Red\"), rValue, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Green\"), gValue, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Blue\"), bValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter R value\",\n    onChange: function onChange(e) {\n      return setRBG(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/iNks/Documents/DEV/rgbtohex/pages/index.js"],"names":["useState","RGB_HEX","HEX2RGB","str","String","match","short","long","value","Number","parseInt","Array","from","s","map","n","Index","linkStyle","background","height","width","rValue","setRValue","gValue","setGValue","bValue","setBValue","setRBG","result","e","target"],"mappings":";;;;AAGA,SAASA,QAAT,QAAyB,OAAzB;AAOA,IAAMC,OAAO,GAAG,2DAAhB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG,EAAI;AAAA,aACKC,MAAM,CAACD,GAAD,CAAN,CAAYE,KAAZ,CAAkBJ,OAAlB,KAA8B,EADnC;AAAA;AAAA,MACXK,MADW;AAAA,MACJC,KADI;;AAGrB,MAAIA,KAAJ,EAAU;AACR,QAAMC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBH,KAAhB,EAAsB,EAAtB,CAAd;AACA,WAAO,CAAEC,KAAK,IAAI,EAAX,EAAeA,KAAK,IAAI,CAAT,GAAa,IAA5B,EAAkCA,KAAK,GAAG,IAA1C,CAAP;AACD,GAHD,MAGO,IAAIF,MAAJ,EAAW;AAChB,WAAOK,KAAK,CAACC,IAAN,CAAWN,MAAX,EAAkB,UAAAO,CAAC;AAAA,aAAIJ,MAAM,CAACC,QAAP,CAAgBG,CAAhB,EAAmB,EAAnB,CAAJ;AAAA,KAAnB,EAA+CC,GAA/C,CAAmD,UAAAC,CAAC;AAAA,aAAKA,CAAC,IAAI,CAAN,GAAWA,CAAf;AAAA,KAApD,CAAP;AACD;AACF,CATD;;AAeA,eAAe,SAASC,KAAT,GAAiB;AAC5B,MAAMC,SAAS,GAAG;AACdC,IAAAA,UAAU,EAAE,SADE;AAEdC,IAAAA,MAAM,EAAE,OAFM;AAGdC,IAAAA,KAAK,EAAE;AAHO,GAAlB;;AAD4B,kBAOApB,QAAQ,EAPR;AAAA,MAOrBqB,MAPqB;AAAA,MAObC,SAPa;;AAAA,mBAQAtB,QAAQ,EARR;AAAA,MAQrBuB,MARqB;AAAA,MAQbC,SARa;;AAAA,mBASAxB,QAAQ,EATR;AAAA,MASrByB,MATqB;AAAA,MASbC,SATa;;AAW5B,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACxB,GAAD,EAAS;AACpB,QAAMyB,MAAM,GAAG1B,OAAO,CAACC,GAAD,CAAtB;AACAmB,IAAAA,SAAS,CAACM,MAAM,CAAC,CAAD,CAAP,CAAT;AACAJ,IAAAA,SAAS,CAACI,MAAM,CAAC,CAAD,CAAP,CAAT;AACAF,IAAAA,SAAS,CAACE,MAAM,CAAC,CAAD,CAAP,CAAT;AAGH,GAPD;;AASA,SACE;AAAK,IAAA,KAAK,EAAEX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAIGI,MAJH,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAOGE,MAPH,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAUGE,MAVH,EAYE;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,WAAW,EAAG,eAFd;AAGA,IAAA,QAAQ,EAAI,kBAACI,CAAD;AAAA,aAAOF,MAAM,CAACE,CAAC,CAACC,MAAF,CAAStB,KAAV,CAAb;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAsBD","sourcesContent":["\n\n\nimport { useState } from 'react'\n\n\n\n\n\n\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nconst HEX2RGB = str => {\n  const [ , short, long ] = String(str).match(RGB_HEX) || [];\n\n  if (long) {\n    const value = Number.parseInt(long, 16);\n    return [ value >> 16, value >> 8 & 0xFF, value & 0xFF ];\n  } else if (short) {\n    return Array.from(short, s => Number.parseInt(s, 16)).map(n => (n << 4) | n);\n  }\n};\n\n\n\n\n\nexport default function Index() {\n    const linkStyle = {\n        background: \"#F3F3F3\", \n        height: \"100px\",\n        width: \"100px\"\n      };\n\n    const [rValue, setRValue] = useState()\n    const [gValue, setGValue] = useState()\n    const [bValue, setBValue] = useState()\n\n    const setRBG = (str) => {\n        const result = HEX2RGB(str)\n        setRValue(result[0]);\n        setGValue(result[1]);\n        setBValue(result[2]);\n\n        \n    }\n\n    return (\n      <div style={linkStyle}>\n        <p>Hello Next.js</p>\n\n        <p>Red</p>\n        {rValue}\n\n        <p>Green</p>\n        {gValue}\n\n        <p>Blue</p>\n        {bValue}\n\n        <input \n        type=\"text\"\n        placeholder = \"Enter R value\"\n        onChange = {(e) => setRBG(e.target.value)}\n        />\n        \n    \n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}