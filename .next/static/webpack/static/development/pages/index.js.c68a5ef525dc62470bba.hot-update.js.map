{"version":3,"file":"static/webpack/static/development/pages/index.js.c68a5ef525dc62470bba.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["\n\n\nimport { useState } from 'react'\n\n\n\n\n\n\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nfunction rgbToHex(r, g, b) {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\n\nfunction HEX2RGB (hex) {\n    \"use strict\";\n    if (hex.charAt(0) === '#') {\n        hex = hex.substr(1);\n    }\n    if ((hex.length < 2) || (hex.length > 6)) {\n        return false;\n    }\n    var values = hex.split(''),\n        r,\n        g,\n        b;\n\n    if (hex.length === 2) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = r;\n        b = r;\n    } else if (hex.length === 3) {\n        r = parseInt(values[0].toString() + values[0].toString(), 16);\n        g = parseInt(values[1].toString() + values[1].toString(), 16);\n        b = parseInt(values[2].toString() + values[2].toString(), 16);\n    } else if (hex.length === 6) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = parseInt(values[2].toString() + values[3].toString(), 16);\n        b = parseInt(values[4].toString() + values[5].toString(), 16);\n    } else {\n        return false;\n    }\n    return [r, g, b];\n}\n\n\n\n\n\nexport default function Index() {\n    const [rValue, setRValue] = useState()\n    const [gValue, setGValue] = useState()\n    const [bValue, setBValue] = useState()\n    const [theHex, setTheHex] = useState()\n    const [theRGB, setTheRGB] = useState([])\n    const [theColor, setTheColor] = useState([])\n\n    const setRBG = (str) => {\n        const result = HEX2RGB(str)\n        setTheRGB([result[0], result[1], result[2]])\n        setTheHex(str)\n        setTheColor({background: \"#\" + str})\n\n    }\n\n    const setHEX = (r,g,b) => {\n        const result = rgbToHex(r,g,b)\n        setTheRGB(r,g,b)\n        setTheHex(result)\n        setTheColor({background: \"#\" + result})\n\n    }\n\n    return (\n      <div style={theColor}>\n        <p>Hello Next.js</p>\n\n        <p>Red</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter Red value\"\n        value = {theRGB[0]}\n        onChange = {(e) => {\n\n        }\n        }\n        />\n\n        <p>Green</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter Green value\"\n        value = {theRGB[1]}\n        onChange = {(e) => {\n\n        }\n        }\n        />\n\n        <p>Blue</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter Blue value\"\n        value = {theRGB[2]}\n        onChange = {(e) => {\n\n        }\n        }\n        />\n\n\n        <br/>\n\n        <input \n        type=\"text\"\n        placeholder = \"Enter value\"\n        maxLength = \"6\"\n        value = {theHex}\n        onChange = {(e) => {\n            setRBG(e.target.value)\n        }\n        }\n        />\n        \n    \n      </div>\n    );\n  }"],"mappings":";;;;;;;;;;;;;;;;;AAGA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;A","sourceRoot":""}