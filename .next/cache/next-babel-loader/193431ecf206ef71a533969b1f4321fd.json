{"ast":null,"code":"var _jsxFileName = \"/Users/iNks/Documents/DEV/rgbtohex/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nfunction rgbToHex(r, g, b) {\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\nfunction HEX2RGB(hex) {\n  \"use strict\";\n\n  if (hex.charAt(0) === '#') {\n    hex = hex.substr(1);\n  }\n\n  if (hex.length < 2 || hex.length > 6) {\n    return false;\n  }\n\n  var values = hex.split(''),\n      r,\n      g,\n      b;\n\n  if (hex.length === 2) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = r;\n    b = r;\n  } else if (hex.length === 3) {\n    r = parseInt(values[0].toString() + values[0].toString(), 16);\n    g = parseInt(values[1].toString() + values[1].toString(), 16);\n    b = parseInt(values[2].toString() + values[2].toString(), 16);\n  } else if (hex.length === 6) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = parseInt(values[2].toString() + values[3].toString(), 16);\n    b = parseInt(values[4].toString() + values[5].toString(), 16);\n  } else {\n    return false;\n  }\n\n  return [r, g, b];\n}\n\nexport default function Index() {\n  const {\n    0: rValue,\n    1: setRValue\n  } = useState();\n  const {\n    0: gValue,\n    1: setGValue\n  } = useState();\n  const {\n    0: bValue,\n    1: setBValue\n  } = useState();\n  const {\n    0: theHex,\n    1: setTheHex\n  } = useState();\n  const {\n    0: theRGB,\n    1: setTheRGB\n  } = useState([]);\n\n  const setRBG = str => {\n    const result = HEX2RGB(str); // setRValue(result[0]);\n    // setGValue(result[1]);\n    // setBValue(result[2]);\n\n    setTheRGB([result[0], result[1], result[2]]);\n  };\n\n  const setHEX = str => {\n    setTheHex({\n      background: \"#\" + str\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: theHex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Hello Next.js\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Red\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter value\",\n    defaultValue: theRGB[0],\n    onChange: e => {\n      if (e.target.value) {\n        setRBG(e.target.value);\n        setHEX(e.target.value);\n      } else {\n        setHEX(\"FFFFFF\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Green\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter value\",\n    defaultValue: theRGB[1],\n    onChange: e => {\n      if (e.target.value) {\n        setRBG(e.target.value);\n        setHEX(e.target.value);\n      } else {\n        setHEX(\"FFFFFF\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Blue\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter value\",\n    defaultValue: theRGB[2],\n    onChange: e => {\n      if (e.target.value) {\n        setRBG(e.target.value);\n        setHEX(e.target.value);\n      } else {\n        setHEX(\"FFFFFF\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter value\",\n    onChange: e => {\n      if (e.target.value) {\n        setRBG(e.target.value);\n        setHEX(e.target.value);\n      } else {\n        setHEX(\"FFFFFF\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/iNks/Documents/DEV/rgbtohex/pages/index.js"],"names":["useState","RGB_HEX","rgbToHex","r","g","b","toString","slice","HEX2RGB","hex","charAt","substr","length","values","split","parseInt","Index","rValue","setRValue","gValue","setGValue","bValue","setBValue","theHex","setTheHex","theRGB","setTheRGB","setRBG","str","result","setHEX","background","e","target","value"],"mappings":"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","sourcesContent":["\n\n\nimport { useState } from 'react'\n\n\n\n\n\n\nconst RGB_HEX = /^#?(?:([\\da-f]{3})[\\da-f]?|([\\da-f]{6})(?:[\\da-f]{2})?)$/i;\n\nfunction rgbToHex(r, g, b) {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\n\nfunction HEX2RGB (hex) {\n    \"use strict\";\n    if (hex.charAt(0) === '#') {\n        hex = hex.substr(1);\n    }\n    if ((hex.length < 2) || (hex.length > 6)) {\n        return false;\n    }\n    var values = hex.split(''),\n        r,\n        g,\n        b;\n\n    if (hex.length === 2) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = r;\n        b = r;\n    } else if (hex.length === 3) {\n        r = parseInt(values[0].toString() + values[0].toString(), 16);\n        g = parseInt(values[1].toString() + values[1].toString(), 16);\n        b = parseInt(values[2].toString() + values[2].toString(), 16);\n    } else if (hex.length === 6) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = parseInt(values[2].toString() + values[3].toString(), 16);\n        b = parseInt(values[4].toString() + values[5].toString(), 16);\n    } else {\n        return false;\n    }\n    return [r, g, b];\n}\n\n\n\n\n\nexport default function Index() {\n    const [rValue, setRValue] = useState()\n    const [gValue, setGValue] = useState()\n    const [bValue, setBValue] = useState()\n    const [theHex, setTheHex] = useState()\n    const [theRGB, setTheRGB] = useState([])\n\n    const setRBG = (str) => {\n        const result = HEX2RGB(str)\n        // setRValue(result[0]);\n        // setGValue(result[1]);\n        // setBValue(result[2]);\n        setTheRGB([result[0], result[1], result[2]])\n    }\n\n    const setHEX = (str) => {\n        setTheHex({background: \"#\" + str})\n    }\n\n    return (\n      <div style={theHex}>\n        <p>Hello Next.js</p>\n\n        <p>Red</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter value\"\n        defaultValue = {theRGB[0]}\n        onChange = {(e) => {\n            if (e.target.value) {\n                setRBG(e.target.value)\n                setHEX(e.target.value)\n            } else {\n                setHEX(\"FFFFFF\")\n            }\n        }\n        }\n        />\n\n        <p>Green</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter value\"\n        defaultValue = {theRGB[1]}\n        onChange = {(e) => {\n            if (e.target.value) {\n                setRBG(e.target.value)\n                setHEX(e.target.value)\n            } else {\n                setHEX(\"FFFFFF\")\n            }\n        }\n        }\n        />\n\n        <p>Blue</p>\n        <input \n        type=\"text\"\n        placeholder = \"Enter value\"\n        defaultValue = {theRGB[2]}\n        onChange = {(e) => {\n            if (e.target.value) {\n                setRBG(e.target.value)\n                setHEX(e.target.value)\n            } else {\n                setHEX(\"FFFFFF\")\n            }\n        }\n        }\n        />\n\n\n        <br/>\n\n        <input \n        type=\"text\"\n        placeholder = \"Enter value\"\n        onChange = {(e) => {\n            if (e.target.value) {\n                setRBG(e.target.value)\n                setHEX(e.target.value)\n            } else {\n                setHEX(\"FFFFFF\")\n            }\n        }\n        }\n        />\n        \n    \n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}