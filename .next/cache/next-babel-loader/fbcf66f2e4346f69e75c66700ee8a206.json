{"ast":null,"code":"var _jsxFileName = \"/Users/iNks/Documents/DEV/rgbtohex/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react'; // function rgbToHex(r, g, b) {\n//     return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n// }\n\nvar rgbToHex = function rgbToHex(rgb) {\n  if (!rgb) {\n    return;\n  }\n\n  var regex = /^.*?\\b(\\d{1,3})[ ,]+(\\d{1,3})[ ,]+(\\d{1,3})\\b.*?$/;\n  var regexResult = regex.exec(rgb);\n\n  if (regexResult && regexResult.length > 0) {\n    var hexDict = {\n      r: decimalValueToHexString(parseInt(regexResult[1], 10)),\n      g: decimalValueToHexString(parseInt(regexResult[2], 10)),\n      b: decimalValueToHexString(parseInt(regexResult[3], 10))\n    };\n    return \"#\".concat(hexDict.r).concat(hexDict.g).concat(hexDict.b);\n  }\n};\n\nfunction HEX2RGB(hex) {\n  \"use strict\";\n\n  if (hex.charAt(0) === '#') {\n    hex = hex.substr(1);\n  }\n\n  if (hex.length < 2 || hex.length > 6) {\n    return false;\n  }\n\n  var values = hex.split(''),\n      r,\n      g,\n      b;\n\n  if (hex.length === 2) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = r;\n    b = r;\n  } else if (hex.length === 3) {\n    r = parseInt(values[0].toString() + values[0].toString(), 16);\n    g = parseInt(values[1].toString() + values[1].toString(), 16);\n    b = parseInt(values[2].toString() + values[2].toString(), 16);\n  } else if (hex.length === 6) {\n    r = parseInt(values[0].toString() + values[1].toString(), 16);\n    g = parseInt(values[2].toString() + values[3].toString(), 16);\n    b = parseInt(values[4].toString() + values[5].toString(), 16);\n  } else {\n    return false;\n  }\n\n  return [r, g, b];\n}\n\nexport default function Index() {\n  var _useState = useState(0),\n      rValue = _useState[0],\n      setRValue = _useState[1];\n\n  var _useState2 = useState(0),\n      gValue = _useState2[0],\n      setGValue = _useState2[1];\n\n  var _useState3 = useState(0),\n      bValue = _useState3[0],\n      setBValue = _useState3[1];\n\n  var _useState4 = useState(\"FFFFFF\"),\n      theHex = _useState4[0],\n      setTheHex = _useState4[1];\n\n  var _useState5 = useState(),\n      theRGB = _useState5[0],\n      setTheRGB = _useState5[1];\n\n  var _useState6 = useState(),\n      theColor = _useState6[0],\n      setTheColor = _useState6[1];\n\n  var setDefault = function setDefault() {\n    // setRValue(null)\n    // setGValue(null)\n    // setBValue(null)\n    // setTheHex(null)\n    setTheColor({\n      background: \"#FFFFFF\"\n    }); // alert(\"empty\")\n  };\n\n  var setRGB = function setRGB(str) {\n    var result = HEX2RGB(str);\n    setRValue(result[0]);\n    setGValue(result[1]);\n    setBValue(result[2]);\n    setTheHex(str);\n    setTheColor({\n      background: \"#\" + str\n    });\n  };\n\n  var setHEX = function setHEX(r, g, b) {\n    var red = r;\n    var green = g;\n    var blue = b; // if (r === null) {\n    //     red = 0\n    // }\n    // if (g === null) {\n    //     green = 0\n    // }\n    // if (b === null) {\n    //     blue = 0\n    // }\n\n    var result = rgbToHex(red, green, blue);\n    setRValue(red);\n    setGValue(green);\n    setBValue(blue);\n    setTheHex(result);\n    setTheColor({\n      background: \"#\" + result\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: theColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Hello Next.js\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Red \"), \" \", rValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Red value\",\n    value: rValue,\n    maxLength: \"3\",\n    onChange: function onChange(e) {\n      if (e.target.value) {\n        setHEX(e.target.value, gValue, bValue);\n      } else {\n        setRValue(null);\n        setDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Green \"), \" \", gValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Green value\",\n    value: gValue,\n    maxLength: \"3\",\n    onChange: function onChange(e) {\n      if (e.target.value) {\n        setHEX(rValue, e.target.value, bValue);\n      } else {\n        setGValue(null);\n        setDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Blue \"), \" \", bValue, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Blue value\",\n    value: bValue,\n    maxLength: \"3\",\n    onChange: function onChange(e) {\n      if (e.target.value) {\n        setHEX(rValue, gValue, e.target.value);\n      } else {\n        setBValue(null);\n        setDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"Hex Value \"), theHex, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter value\",\n    maxLength: \"6\",\n    value: theHex,\n    onChange: function onChange(e) {\n      if (e.target.value) {\n        setRGB(e.target.value);\n      } else {\n        setTheHex(null);\n        setDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/iNks/Documents/DEV/rgbtohex/pages/index.js"],"names":["useState","rgbToHex","rgb","regex","regexResult","exec","length","hexDict","r","decimalValueToHexString","parseInt","g","b","HEX2RGB","hex","charAt","substr","values","split","toString","Index","rValue","setRValue","gValue","setGValue","bValue","setBValue","theHex","setTheHex","theRGB","setTheRGB","theColor","setTheColor","setDefault","background","setRGB","str","result","setHEX","red","green","blue","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\n\n\n// function rgbToHex(r, g, b) {\n\n//     return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n// }\n\nconst rgbToHex = (rgb) => {\n    if (!rgb) {\n        return\n    }\n    let regex = /^.*?\\b(\\d{1,3})[ ,]+(\\d{1,3})[ ,]+(\\d{1,3})\\b.*?$/\n    const regexResult =regex.exec(rgb)\n    if(regexResult && regexResult.length > 0) {\n        const hexDict = {\n            r: decimalValueToHexString(parseInt(regexResult[1], 10)),\n            g: decimalValueToHexString(parseInt(regexResult[2], 10)),\n            b: decimalValueToHexString(parseInt(regexResult[3], 10))\n        }\n        return `#${hexDict.r}${hexDict.g}${hexDict.b}`\n    }\n}\n\n\nfunction HEX2RGB (hex) {\n    \"use strict\";\n    if (hex.charAt(0) === '#') {\n        hex = hex.substr(1);\n    }\n    if ((hex.length < 2) || (hex.length > 6)) {\n        return false;\n    }\n    var values = hex.split(''),\n        r,\n        g,\n        b;\n\n    if (hex.length === 2) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = r;\n        b = r;\n    } else if (hex.length === 3) {\n        r = parseInt(values[0].toString() + values[0].toString(), 16);\n        g = parseInt(values[1].toString() + values[1].toString(), 16);\n        b = parseInt(values[2].toString() + values[2].toString(), 16);\n    } else if (hex.length === 6) {\n        r = parseInt(values[0].toString() + values[1].toString(), 16);\n        g = parseInt(values[2].toString() + values[3].toString(), 16);\n        b = parseInt(values[4].toString() + values[5].toString(), 16);\n    } else {\n        return false;\n    }\n    return [r, g, b];\n}\n\n\nexport default function Index() {\n    const [rValue, setRValue] = useState(0)\n    const [gValue, setGValue] = useState(0)\n    const [bValue, setBValue] = useState(0)\n    const [theHex, setTheHex] = useState(\"FFFFFF\")\n    const [theRGB, setTheRGB] = useState()\n    const [theColor, setTheColor] = useState()\n\n    const setDefault = () => {\n        // setRValue(null)\n        // setGValue(null)\n        // setBValue(null)\n        // setTheHex(null)\n        setTheColor({background: \"#FFFFFF\"})\n        // alert(\"empty\")\n    }\n\n    const setRGB = (str) => {\n        const result = HEX2RGB(str)\n\n        setRValue(result[0])\n        setGValue(result[1])\n        setBValue(result[2])\n\n        setTheHex(str)\n        setTheColor({background: \"#\" + str})\n\n    }\n\n    const setHEX = (r,g,b) => {\n        let red = r\n        let green = g\n        let blue = b\n\n        // if (r === null) {\n        //     red = 0\n        // }\n        // if (g === null) {\n        //     green = 0\n        // }\n        // if (b === null) {\n        //     blue = 0\n        // }\n        \n        const result = rgbToHex(red,green,blue)\n\n        setRValue(red)\n        setGValue(green)\n        setBValue(blue)\n\n        setTheHex(result)\n        setTheColor({background: \"#\" + result})\n\n    }\n\n    return (\n      <div style={theColor}>\n        <p>Hello Next.js</p>\n\n        <p>Red </p> {rValue}\n        <input \n        type=\"text\"\n        placeholder = \"Enter Red value\"\n        value = {rValue}\n        maxLength = \"3\"\n        onChange = {(e) => {\n            if (e.target.value) {\n                setHEX(e.target.value, gValue, bValue)\n            } else {\n                setRValue(null)\n                setDefault()\n            }\n        }\n        }\n        />\n\n        <p>Green </p> {gValue}\n        <input \n        type=\"text\"\n        placeholder = \"Enter Green value\"\n        value = {gValue}\n        maxLength = \"3\"\n        onChange = {(e) => {\n            if (e.target.value) {\n                setHEX(rValue, e.target.value, bValue)\n            } else {\n                setGValue(null)\n                setDefault()\n            }\n        }\n        }\n        />\n\n        <p>Blue </p> {bValue}\n        <input \n        type=\"text\"\n        placeholder = \"Enter Blue value\"\n        value = {bValue}\n        maxLength = \"3\"\n        onChange = {(e) => {\n            if (e.target.value) {\n                setHEX(rValue, gValue, e.target.value)\n            } else {\n                setBValue(null)\n                setDefault()\n            }\n        }\n        }\n        />\n\n\n        <br/>\n        <br/>\n    \n        <p>Hex Value </p>{theHex}\n        <input \n        type=\"text\"\n        placeholder = \"Enter value\"\n        maxLength = \"6\"\n        value = {theHex}\n        onChange = {(e) => {\n            if (e.target.value) {\n                setRGB(e.target.value)\n            } else {\n                setTheHex(null)\n                setDefault()\n            }\n            \n        }\n        }\n        />\n        \n    \n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}